// <auto-generated />
using System;
using DataVault.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataVault.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("DataVault.Models.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_criacao");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("mensagem");

                    b.Property<string>("SelecionarNivel")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("selecionar_nivel");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("feedback");
                });

            modelBuilder.Entity("DataVault.Models.Files", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ArquivoFile")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("arquivo_file");

                    b.Property<bool>("Compartilhado")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("compartilhado");

                    b.Property<bool>("ConteudoSensivel")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("conteudo_sensivel");

                    b.Property<bool>("Excluido")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("excluido");

                    b.Property<bool>("Favorito")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("favorito");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<bool>("IsPasta")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_pasta");

                    b.Property<string>("NomeArquivo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome_arquivo");

                    b.Property<string>("NomePasta")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome_pasta");

                    b.Property<int?>("PastaPaiId")
                        .HasColumnType("int")
                        .HasColumnName("pasta_pai_id");

                    b.Property<string>("Tags")
                        .HasColumnType("longtext")
                        .HasColumnName("tags");

                    b.Property<long>("TamanhoArquivo")
                        .HasColumnType("bigint")
                        .HasColumnName("tamanho_arquivo");

                    b.Property<string>("TipoArquivo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tipo_arquivo");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("PastaPaiId");

                    b.ToTable("files");
                });

            modelBuilder.Entity("DataVault.Models.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("CartaoCredito")
                        .HasColumnType("bigint")
                        .HasColumnName("cartao_credito");

                    b.Property<long>("CartaoDebito")
                        .HasColumnType("bigint")
                        .HasColumnName("catao_debito");

                    b.Property<string>("Extrato")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("extrato");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Pix")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("pix");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("pagamento");
                });

            modelBuilder.Entity("DataVault.Models.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HistoricoMensagens")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("historico_mensagens");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Lingua")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("lingua");

                    b.Property<string>("ModoSite")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("modo_site");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("perfil");
                });

            modelBuilder.Entity("DataVault.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("nome_cliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("DataVault.Models.Feedback", b =>
                {
                    b.HasOne("DataVault.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DataVault.Models.Files", b =>
                {
                    b.HasOne("DataVault.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataVault.Models.Files", "PastaPai")
                        .WithMany("Filhos")
                        .HasForeignKey("PastaPaiId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("PastaPai");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DataVault.Models.Pagamento", b =>
                {
                    b.HasOne("DataVault.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DataVault.Models.Perfil", b =>
                {
                    b.HasOne("DataVault.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DataVault.Models.Files", b =>
                {
                    b.Navigation("Filhos");
                });
#pragma warning restore 612, 618
        }
    }
}
